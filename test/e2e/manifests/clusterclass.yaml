apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: aws-test-cluster-class
  namespace: default
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: aws-test-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: AWSClusterTemplate
      name: aws-test-cluster
  workers:
    machineDeployments:
    - class: default-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: aws-test-worker-bootstrap
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
            kind: AWSMachineTemplate
            name: aws-test-worker
  variables:
  - name: region
    required: true
    schema:
      openAPIV3Schema:
        type: string
        default: us-west-2
  - name: instanceType
    required: false
    schema:
      openAPIV3Schema:
        type: string
        default: t3.small
  - name: controlPlaneInstanceType
    required: false
    schema:
      openAPIV3Schema:
        type: string
        default: t3.medium
  - name: nodeCount
    required: false
    schema:
      openAPIV3Schema:
        type: integer
        default: 2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSClusterTemplate
metadata:
  name: aws-test-cluster
  namespace: default
spec:
  template:
    spec:
      region: "{{ .region }}"
      sshKeyName: "{{ .sshKeyName | default \"\" }}"
      vpc:
        cidrBlock: "10.0.0.0/16"
      subnets:
      - availabilityZone: "{{ .region }}a"
        cidrBlock: "10.0.1.0/24"
        isPublic: true
      - availabilityZone: "{{ .region }}b"  
        cidrBlock: "10.0.2.0/24"
        isPublic: true
      - availabilityZone: "{{ .region }}c"
        cidrBlock: "10.0.3.0/24"
        isPublic: false
      - availabilityZone: "{{ .region }}d"
        cidrBlock: "10.0.4.0/24"
        isPublic: false
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: aws-test-control-plane
  namespace: default
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            cloudProvider: aws
          controllerManager:
            cloudProvider: aws
        initConfiguration:
          nodeRegistration:
            name: '{{ ds.meta_data.local_hostname }}'
            kubeletExtraArgs:
              cloud-provider: aws
        joinConfiguration:
          nodeRegistration:
            name: '{{ ds.meta_data.local_hostname }}'
            kubeletExtraArgs:
              cloud-provider: aws
        files:
        - owner: root:root
          path: /etc/kubernetes/aws.yaml
          content: |
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: aws-cloud-config
              namespace: kube-system
            data:
              cloud.conf: |-
                [Global]
                Zone={{ ds.meta_data.placement.availability_zone }}
                VPC={{ ds.meta_data.vpc_id }}
                SubnetID={{ ds.meta_data.subnet_id }}
                InstanceID={{ ds.meta_data.instance_id }}
                Region={{ ds.meta_data.placement.region }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: aws-test-control-plane
  namespace: default
spec:
  template:
    spec:
      instanceType: "{{ .controlPlaneInstanceType }}"
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      ami:
        lookupFormat: "capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*"
        lookupBaseOS: "ubuntu-20.04"
        lookupOrg: "258751437250"
      sshKeyName: "{{ .sshKeyName | default \"\" }}"
      cloudInit:
        insecureSkipSecretsManager: true
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: aws-test-worker
  namespace: default
spec:
  template:
    spec:
      instanceType: "{{ .instanceType }}"
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
      ami:
        lookupFormat: "capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*"
        lookupBaseOS: "ubuntu-20.04"
        lookupOrg: "258751437250"
      sshKeyName: "{{ .sshKeyName | default \"\" }}"
      cloudInit:
        insecureSkipSecretsManager: true
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: aws-test-worker-bootstrap
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.local_hostname }}'
          kubeletExtraArgs:
            cloud-provider: aws
      files:
      - owner: root:root
        path: /etc/kubernetes/aws.yaml
        content: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: aws-cloud-config
            namespace: kube-system
          data:
            cloud.conf: |-
              [Global]
              Zone={{ ds.meta_data.placement.availability_zone }}
              VPC={{ ds.meta_data.vpc_id }}
              SubnetID={{ ds.meta_data.subnet_id }}
              InstanceID={{ ds.meta_data.instance_id }}
              Region={{ ds.meta_data.placement.region }}